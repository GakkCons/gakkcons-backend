services:
  app:
    build: .
    env_file: .env
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - JWT_SECRET=${JWT_SECRET}
    command:
      [
        "sh",
        "-c",
        "npm install && npm uninstall bcrypt && npm install bcrypt && npm run db:migrate && npm run db:seed && npm run dev",
      ]

    networks:
      - app-network

  db:
    env_file: .env
    image: postgres
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
